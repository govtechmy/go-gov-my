apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  name: gogov-kafka-connect
  namespace: gogov
  annotations:
    # use-connector-resources configures this KafkaConnect
    # to use KafkaConnector resources to avoid
    # needing to call the Connect REST API directly
    strimzi.io/use-connector-resources: "true"
spec:
  image: 767397910274.dkr.ecr.ap-southeast-1.amazonaws.com/gogov-kafka-connect
  replicas: 1
  bootstrapServers: kafka-cluster-kafka-brokers:9092
  # tls:
  #   trustedCertificates:
  #     - secretName: gogov-kafka-connect-ca-cert  # need to change this later by finding a secret created by strimzi
  #       certificate: ca.crt
  config:
    config.storage.replication.factor: 1
    offset.storage.replication.factor: 1
    status.storage.replication.factor: 1
    config.providers: file
    config.providers.file.class: org.apache.kafka.common.config.provider.FileConfigProvider
    database.url: ""
  template:
    pod:
      env:
        - name: JAVA_HOME
          value: "/usr/lib/jvm/java-17-openjdk" # Example path for Java 17
        - name: JAVA_TOOL_OPTIONS
          value: "-XX:+UseContainerSupport"

# spec:
#   version: 3.5.1
#   replicas: 1
#   bootstrapServers: fka-cluster-kafka-brokers:9092
#   config:
#     group.id: connect-cluster
#     offset.storage.topic: connect-offsets
#     config.storage.topic: connect-configs
#     status.storage.topic: connect-status
#     key.converter: org.apache.kafka.connect.json.JsonConverter
#     value.converter: org.apache.kafka.connect.json.JsonConverter
#   plugins:
#     - name: debezium-plugins
#       artifacts:
#         - type: jar
#           url: 767397910274.dkr.ecr.ap-southeast-1.amazonaws.com/gogov-kafka-connect

