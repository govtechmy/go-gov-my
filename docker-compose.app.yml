# version: "3.8"

# services:
# gogovmy_db:
#   container_name: gogovmy_db
#   image: postgres:13
#   restart: always
#   ports:
#     - 5432:5432
#   volumes:
#     - gogovmy_db-volume:/var/lib/postgresql/data
#   environment:
#     - POSTGRES_DB=${POSTGRESDB}
#     - POSTGRES_USER=${POSTGRESUSER}
#     - POSTGRES_PASSWORD=${POSTGRESPASSWORD}
#   healthcheck:
#     test: "exit 0"
# redis:
#   container_name: gogovmy_redist
#   image: redis:7.2
#   ports:
#     - 6379:6379
#   restart: always
#   healthcheck:
#     test: "exit 0"
#   web:
#     container_name: gogovmy_web
#     build:
#       context: .
#       dockerfile: ./apps/web/Dockerfile
#       network: host
#     working_dir: /app
#     volumes:
#       - ./:/app
#     ports:
#       - 8888:8888
#     tty: true
#     depends_on:
#       gogovmy_db:
#         condition: service_healthy
#       redis:
#         condition: service_healthy
# volumes:
#   gogovmy_db-volume:
#   redis:

version: "3.8"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8888:8888
    environment:
      - NODE_ENV=development
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - my-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.2
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
    networks:
      - my-network

  redirect-server:
    build:
      context: ./redirect-server
    ports:
      - 8889:8889
    networks:
      - my-network
    depends_on:
      - elasticsearch

networks:
  my-network:
